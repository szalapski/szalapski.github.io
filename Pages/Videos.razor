@page "/videos"
@page "/videos/{videoId}"
@using szalapski.github.io.Components

@inject HttpClient client

<PageTitle>Szalapski.github.io videos</PageTitle>

@if (IsLoading)
{
    <p>Loading...</p>
    return;
}

@if (VideoId is null)
{
    <h1>All videos</h1>

    @foreach (string id in VideoIds)
    {
        <a href="videos/@id" class="position-relative">
            <div class="position-absolute border-1 "
                style="background-color: transfparent; height: 200px; width: 300px; z-index:2;">
            </div>
            <Video IsPreview="true" Id="@id" />
        </a>
    }
    return;
}

@if (VideoIds.Contains(VideoId))
{
    <Video Id="@VideoId" />
}
else
{
    <p>Video/playlist with ID <pre>@VideoId</pre> not found.</p>
}



@code {
    protected override async Task OnInitializedAsync()
    {
        VideoIds = await client.GetFromJsonAsync<IEnumerable<string>>("videos.txt") ?? [];
        IsLoading = false;
    }

    [Parameter]
    public string? VideoId { get; init; } = null;

    private IEnumerable<string> VideoIds { get; set; } = [];
    private bool IsLoading { get; set; } = true;

}
